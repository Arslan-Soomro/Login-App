{"version":3,"sources":["Components/Login/Login.js","Components/tools.js","Components/Signup/Signup.js","Components/InfoField/InfoField.js","Components/Account/Account.js","Components/App/requests.js","Components/App/App.js","index.js"],"names":["Login","this","props","isInView","className","type","placeholder","name","value","inputUsername","onChange","e","onInputChange","target","inputPassword","style","color","inputErr","hint","onClick","onLogin","onSignup","React","Component","validateInput","input","values","validChars","validCodes","i","push","String","fromCharCode","generateValidStrChars","validInput","length","val","includes","updateObj","parentObj","objName","objKeys","objValues","newObj","Object","assign","Signup","cs","componentState","inView","input_firstname","maxLength","border","input_lastname","input_username","input_password","defaultValue","input_err","field_hint","changeView","InfoField","state","edit","text","title","editWindow","borders","errorOff","setState","maxChars","onUpdate","Account","userData","username","firstname","lastname","password","bio","onLogout","onDelete","checkForUser","a","undefined","strQuery","fetch","response","json","data","postForUser","valuesToPost","method","body","JSON","stringify","headers","deleteUser","u","p","res","updateUser","propName","prop","App","login","user_data","success","signup","input_bio","account","changeViewTo","bind","handleLogin","handleSignup","handleInputChange","handleLogout","handleUpdate","key","forEach","item","setTimeout","obj","fn","ln","b","propVal","port","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.839c2ae5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    if (this.props.isInView) {\r\n      return (\r\n        <div className=\"login_container\">\r\n          <h1 className=\"login_logo\">Login</h1>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className=\"login_input\"\r\n            name=\"input_username\"\r\n            value={this.props.inputUsername}\r\n            onChange={(e) =>\r\n              this.props.onInputChange(e.target.name, e.target.value, \"login\")\r\n            }\r\n          ></input>\r\n\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"login_input\"\r\n            name=\"input_password\"\r\n            value={this.props.inputPassword}\r\n            onChange={(e) =>\r\n              this.props.onInputChange(e.target.name, e.target.value, \"login\")\r\n            }\r\n          ></input>\r\n\r\n          <p\r\n            className=\"login_hint\"\r\n            style={{\r\n              //Nested Terinary Operators To Determine The Color Of Text\r\n              color: this.props.inputErr\r\n                ? \"rgb(210, 6, 6)\" //If This.props.hint is Defined and .res is not defined color is red\r\n                : \"white\", //If this.props.hint is undefined color is white\r\n            }}\r\n          >\r\n            {this.props.hint}\r\n          </p>\r\n\r\n          <button className=\"login_button\" onClick={this.props.onLogin}>\r\n            Login\r\n          </button>\r\n\r\n          <p className=\"login_sign_btn\" onClick={this.props.onSignup}>\r\n            Don't Have An Account ? Sign Up.\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","//Capital A Starts At 65 And Ends At 90 Z\r\n//small a starts at 97 and ends at 122 z\r\n//95 _\r\n//45 -\r\n//48 0 and 57 9\r\n\r\nexport const generateValidStrChars = () => {\r\n  const validCodes = [];\r\n  //Capital Letters\r\n  for (let i = 65; i <= 90; i++) {\r\n    validCodes.push(String.fromCharCode(i));\r\n  }\r\n\r\n  //Small Letters\r\n  for (let i = 97; i <= 122; i++) {\r\n    validCodes.push(String.fromCharCode(i));\r\n  }\r\n\r\n  //Numbers\r\n  for (let i = 48; i <= 57; i++) {\r\n    validCodes.push(String.fromCharCode(i));\r\n  }\r\n\r\n  //Specail Characters - _\r\n  validCodes.push(String.fromCharCode(95));\r\n  validCodes.push(String.fromCharCode(45));\r\n\r\n  return validCodes;\r\n};\r\n\r\nexport const validateInput = (input) => {\r\n  const values = [];\r\n  const validChars = generateValidStrChars();\r\n  let validInput = true;\r\n\r\n  if (input && input.length >= 4) {\r\n    for (let i = 0; i < input.length; i++) {\r\n      values.push(input[i]);\r\n    }\r\n\r\n    for (let val of values) {\r\n      //If Typed Word Is Not A Valid Char\r\n      if (!validChars.includes(val)) {\r\n        validInput = false;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    validInput = false;\r\n  }\r\n\r\n  return validInput;\r\n};\r\n\r\nexport const updateObj = (parentObj, objName, objKeys, objValues) => {\r\n  //Obj is object from which we want to inherit the properties\r\n  //objName is key of the obj\r\n\r\n  const newObj = Object.assign({}, parentObj[objName]);\r\n\r\n  if (typeof objKeys === \"string\") {\r\n    newObj[objKeys] = objValues;\r\n  } else {\r\n    for (let i = 0; i < objKeys.length; i++) {\r\n      newObj[objKeys[i]] = objValues[i];\r\n    }\r\n  }\r\n  return { [objName]: newObj };\r\n};\r\n","import React from \"react\";\r\nimport \"./Signup.css\";\r\nimport { validateInput } from \"../tools\";\r\n\r\nclass Signup extends React.Component {\r\n  render() {\r\n    let { componentState: cs } = this.props;\r\n\r\n    if (cs.inView) {\r\n      return (\r\n        <div className=\"signup_container\">\r\n          <h1 className=\"signup_logo\">SignUp</h1>\r\n          <input\r\n            name=\"input_firstname\"\r\n            type=\"text\"\r\n            placeholder=\"Firstname\"\r\n            className=\"signup_input\"\r\n            value={cs.input_firstname}\r\n            maxLength=\"20\"\r\n            onChange={(e) => {\r\n              this.props.onInputChange(e.target.name, e.target.value, \"signup\");\r\n              e.target.style.border = validateInput(e.target.value)\r\n                ? \"white\"\r\n                : \"2px ridge red\";\r\n            }}\r\n          />\r\n          <input\r\n            name=\"input_lastname\"\r\n            type=\"text\"\r\n            placeholder=\"Lastname\"\r\n            className=\"signup_input\"\r\n            value={cs.input_lastname}\r\n            maxLength=\"20\"\r\n            onChange={(e) => {\r\n              this.props.onInputChange(e.target.name, e.target.value, \"signup\");\r\n              e.target.style.border = validateInput(e.target.value)\r\n                ? \"white\"\r\n                : \"2px ridge red\";\r\n            }}\r\n          />\r\n          <input\r\n            name=\"input_username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className=\"signup_input\"\r\n            value={cs.input_username}\r\n            maxLength=\"20\"\r\n            onChange={(e) => {\r\n              this.props.onInputChange(e.target.name, e.target.value, \"signup\");\r\n              e.target.style.border = validateInput(e.target.value)\r\n                ? \"white\"\r\n                : \"2px ridge red\";\r\n            }}\r\n          />\r\n          <input\r\n            name=\"input_password\"\r\n            type=\"text\"\r\n            placeholder=\"Password\"\r\n            className=\"signup_input\"\r\n            value={cs.input_password}\r\n            maxLength=\"20\"\r\n            onChange={(e) => {\r\n              this.props.onInputChange(e.target.name, e.target.value, \"signup\");\r\n              e.target.style.border = validateInput(e.target.value)\r\n                ? \"white\"\r\n                : \"2px ridge red\";\r\n            }}\r\n          />\r\n\r\n          <textarea\r\n            name=\"input_bio\"\r\n            className=\"signup_textarea\"\r\n            maxLength=\"150\"\r\n            defaultValue=\"My Bio In 150 Characters\"\r\n            onChange={(e) =>\r\n              this.props.onInputChange(e.target.name, e.target.value, \"signup\")\r\n            }\r\n          ></textarea>\r\n          <p\r\n            className=\"signup_hint\"\r\n            style={{ color: cs.input_err ? \"rgb(207, 6, 6)\" : \"white\" }}\r\n          >\r\n            {cs.field_hint}\r\n          </p>\r\n          <button className=\"signup_button\" onClick={this.props.onSignup}>\r\n            SignUp\r\n          </button>\r\n          <p\r\n            className=\"signup_login_btn\"\r\n            onClick={() => this.props.changeView(\"login\")}\r\n          >\r\n            Already Have An Account ? Login.\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport \"./InfoField.css\";\r\nimport { validateInput } from \"../tools\";\r\n\r\nclass InfoField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edit: false,\r\n      text: this.props.title,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let editWindow = null;\r\n    let borders = { border: \"0px\" };\r\n\r\n    if (!this.props.errorOff) {\r\n      if (!validateInput(this.state.text)) {\r\n        borders = { border: \"1px solid red\" };\r\n      }\r\n    }\r\n\r\n    if (this.state.edit) {\r\n      editWindow = (\r\n        <div className=\"infofield_edit_backdrop\">\r\n          <div className=\"infofield_edit_main\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"infofield_edit_input\"\r\n              defaultValue={this.props.title}\r\n              onChange={(e) => {\r\n                this.setState({ text: e.target.value });\r\n                //console.log(validateInput(this.state.text));\r\n              }}\r\n              maxLength={this.props.maxChars || 20}\r\n              style={borders}\r\n            ></textarea>\r\n            <div>\r\n              <button\r\n                className=\"infofield_btn\"\r\n                onClick={() => this.setState({ edit: false })}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"infofield_btn\"\r\n                onClick={() => {\r\n                  if (this.state.text !== this.props.title) {\r\n                    if (this.props.errorOff || validateInput(this.state.text)) {\r\n                      this.props.onUpdate(this.props.name, this.state.text);\r\n                      this.setState({ edit: false });\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <p\r\n          onClick={() => this.setState({ edit: true })}\r\n          className=\"infofield_info\"\r\n        >\r\n          {this.props.title}\r\n        </p>\r\n        {editWindow}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoField;\r\n","import React from \"react\";\r\nimport \"./Account.css\";\r\nimport InfoField from \"../InfoField/InfoField\";\r\n\r\nclass Account extends React.Component {\r\n  render() {\r\n    let { isInView, userData } = this.props;\r\n\r\n    if (isInView) {\r\n      return (\r\n        <div className=\"account_container\">\r\n          <h2>Account Details</h2>\r\n          <h2>Username</h2>\r\n          <InfoField\r\n            title={userData.username}\r\n            name=\"nu\"\r\n            onUpdate={this.props.onUpdate}\r\n          />\r\n          <h2>Firstname</h2>\r\n          <InfoField\r\n            title={userData.firstname}\r\n            name=\"fn\"\r\n            onUpdate={this.props.onUpdate}\r\n          />\r\n          <h2>Lastname</h2>\r\n          <InfoField\r\n            title={userData.lastname}\r\n            name=\"ln\"\r\n            onUpdate={this.props.onUpdate}\r\n          />\r\n          <h2>Password</h2>\r\n          <InfoField\r\n            title={userData.password}\r\n            name=\"np\"\r\n            onUpdate={this.props.onUpdate}\r\n          />\r\n          <h2>Bio</h2>\r\n          <InfoField\r\n            title={userData.bio}\r\n            maxChars={150}\r\n            errorOff={true}\r\n            name=\"b\"\r\n            onUpdate={this.props.onUpdate}\r\n          />\r\n          <div className=\"account_btns\">\r\n            <button className=\"account_btn\" onClick={this.props.onLogout}>\r\n              Logout\r\n            </button>\r\n            <button className=\"account_btn\" onClick={this.props.onDelete}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","\r\nexport const checkForUser = async (\r\n  username,\r\n  password = undefined,\r\n) => {\r\n  let strQuery = \"\";\r\n  if (password) {\r\n    strQuery = `u=${username}&p=${password}`;\r\n  } else {\r\n    strQuery = `u=${username}`;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`https://sideloginapi.herokuapp.com/users?${strQuery}`);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n};\r\n\r\nexport const postForUser = async (valuesToPost) => {\r\n  try {\r\n    const response = await fetch(`https://sideloginapi.herokuapp.com/users`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(valuesToPost),\r\n      headers: { \"content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {\r\n    //console.log(err);\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`https://sideloginapi.herokuapp.com/users`, {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({ u: username, p: password }),\r\n      headers: { \"content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data) {\r\n      if (data.res) {\r\n        return data;\r\n      }\r\n    }\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const updateUser = async (\r\n  username,\r\n  password,\r\n  propName,\r\n  prop\r\n) => {\r\n  const response = await fetch(`https://sideloginapi.herokuapp.com/users`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ u: username, p: password, [propName]: prop }),\r\n    headers: { \"content-type\": \"application/json\" },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (data) {\r\n    if (data.res) {\r\n      return data.res;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n","import React from \"react\";\nimport Login from \"../Login/Login\";\nimport Signup from \"../Signup/Signup\";\nimport Account from \"../Account/Account\";\nimport \"./App.css\";\nimport { validateInput, updateObj } from \"../tools\";\nimport { checkForUser, postForUser, deleteUser, updateUser } from \"./requests\";\n\n//Everything is ready just remove console logs from here and the server to give it a professional look\n//And pack database and server in same folder remove unnecessary files\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: {\n        inView: true,\n        input_username: \"\",\n        input_password: \"\",\n        field_hint: \"Fill in above fields Properly\",\n        user_data: undefined,\n        input_err: false,\n        //if user_data is defined check if .res is defined if yes set success to true else false\n        success: false,\n      },\n\n      signup: {\n        inView: false,\n        input_firstname: \"\",\n        input_lastname: \"\",\n        input_username: \"\",\n        input_password: \"\",\n        input_bio: \"My Bio In 150 characters\",\n        field_hint: \"Use Only Numbers, Alphabet And Atleast 4 characters.\",\n        input_err: false,\n      },\n\n      account: {\n        inView: false,\n        user_data: undefined,\n      },\n    };\n\n    this.changeView = this.changeViewTo.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  changeViewTo(key) {\n    //update obj update here too\n    [\"login\", \"signup\", \"account\"].forEach((item) => {\n      if (item === key) {\n        this.setState(updateObj(this.state, item, \"inView\", true));\n      } else {\n        this.setState(updateObj(this.state, item, \"inView\", false));\n      }\n    });\n  }\n\n  async handleLogin() {\n    let data = undefined;\n    if (this.state.login.input_username && this.state.login.input_password) {\n      this.setState(\n        updateObj(\n          this.state,\n          \"login\",\n          [\"field_hint\", \"input_err\"],\n          [\"Logging You In...\", false]\n        )\n      );\n      data = await checkForUser(\n        this.state.login.input_username,\n        this.state.login.input_password\n      );\n    } else {\n      this.setState(\n        updateObj(\n          this.state,\n          \"login\",\n          [\"field_hint\", \"input_err\"],\n          [\"One Of The Fields is Missing\", true]\n        )\n      );\n      return;\n    }\n\n    if (data) {\n      if (data.res) {\n        this.setState(\n          updateObj(this.state, \"login\", \"field_hint\", \"Login Succesful.\")\n        );\n\n        setTimeout(() => {\n          this.setState(\n            updateObj(this.state, \"account\", \"user_data\", data.res)\n          );\n          this.changeViewTo(\"account\");\n          this.setState(\n            updateObj(\n              this.state,\n              \"login\",\n              [\"input_username\", \"input_password\", \"field_hint\"],\n              [\"\", \"\", \"Fill In Above Fields Properly.\"]\n            )\n          );\n          this.setState(\n            updateObj(\n              this.state,\n              \"login\",\n              [\"input_username\", \"input_password\", \"field_hint\"],\n              [\"\", \"\", \"Fill In Above Fields Properly.\"]\n            )\n          );\n        }, 1000);\n      } else {\n        this.setState(\n          updateObj(\n            this.state,\n            \"login\",\n            [\"field_hint\", \"input_err\"],\n            [\"Username or Password is wrong\", true]\n          )\n        );\n      }\n    } else {\n      this.setState(\n        updateObj(\n          this.state,\n          \"login\",\n          [\"field_hint\", \"input_err\"],\n          [\"There was a problem with your connection, try again later.\", true]\n        )\n      );\n    }\n  }\n\n  handleInputChange(name, value, objName, obj = this.state) {\n    this.setState(updateObj(obj, objName, name, value));\n    //console.log(`${objName}_${name}: ${value}`);\n  }\n\n  async handleSignup() {\n    if (\n      validateInput(this.state.signup.input_firstname) &&\n      validateInput(this.state.signup.input_lastname) &&\n      validateInput(this.state.signup.input_username) &&\n      validateInput(this.state.signup.input_password)\n    ) {\n      this.setState(\n        updateObj(\n          this.state,\n          \"signup\",\n          \"field_hint\",\n          \"Creating Your Account...\"\n        )\n      );\n\n      const response = await postForUser({\n        u: this.state.signup.input_username,\n        p: this.state.signup.input_password,\n        fn: this.state.signup.input_firstname,\n        ln: this.state.signup.input_lastname,\n        b: this.state.signup.input_bio,\n      });\n\n      if (response) {\n        if (response.res) {\n          await this.setState(\n            updateObj(\n              this.state,\n              \"signup\",\n              [\"field_hint\", \"input_err\"],\n              [\"Your Account Is Created Succesfully\", false]\n            )\n          );\n          setTimeout(() => {\n            this.changeViewTo(\"login\");\n            this.setState(\n              updateObj(\n                this.state,\n                \"signup\",\n                [\n                  \"input_firstname\",\n                  \"input_lastname\",\n                  \"input_password\",\n                  \"input_username\",\n                  \"field_hint\",\n                ],\n                [\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"Use Only Numbers, Alphabet And Atleast 4 characters.\",\n                ]\n              )\n            );\n          }, 1000);\n        } else {\n          await this.setState(\n            updateObj(\n              this.state,\n              \"signup\",\n              [\"field_hint\", \"input_err\"],\n              [\"Username Already Exists, Choose Another One.\", true]\n            )\n          );\n        }\n      } else {\n        await this.setState(\n          updateObj(\n            this.state,\n            \"signup\",\n            [\"field_hint\", \"input_err\"],\n            [\n              \"There Was A Problem With Your Connection, Please Try Again Later.\",\n              true,\n            ]\n          )\n        );\n      }\n    } else {\n      this.setState(\n        updateObj(\n          this.state,\n          \"signup\",\n          [\"field_hint\", \"input_err\"],\n          [\"Fill in Above Fields Properly.\", true]\n        )\n      );\n    }\n  }\n\n  async handleLogout() {\n    await this.changeViewTo(\"login\");\n    this.setState(updateObj(this.state, \"account\", \"user_data\", undefined));\n  }\n\n  async handleUpdate(propName, propVal, port = 3001) {\n    const data = await updateUser(\n      this.state.account.user_data.username,\n      this.state.account.user_data.password,\n      propName,\n      propVal,\n      port\n    );\n\n    if (data) {\n      await this.setState(updateObj(this.state, \"account\", \"user_data\", data));\n    }\n  }\n\n  render() {\n    //Working On Validating Inputs\n    return (\n      <div className=\"app_container\">\n        <Login\n          isInView={this.state.login.inView}\n          inputUsername={this.state.login.input_username}\n          inputPassword={this.state.login.input_password}\n          onInputChange={this.handleInputChange}\n          onLogin={this.handleLogin}\n          hint={this.state.login.field_hint}\n          inputErr={this.state.login.input_err}\n          onSignup={() => {\n            this.changeViewTo(\"signup\");\n          }}\n        />\n        <Signup\n          onInputChange={this.handleInputChange}\n          onSignup={this.handleSignup}\n          changeView={this.changeView}\n          componentState={this.state.signup}\n        />\n        <Account\n          isInView={this.state.account.inView}\n          userData={this.state.account.user_data}\n          onLogout={this.handleLogout}\n          onDelete={async () => {\n            const done = await deleteUser(\n              this.state.account.user_data.username,\n              this.state.account.user_data.password\n            );\n            if (done) {\n              this.handleLogout();\n            }\n          }}\n          onUpdate={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}